{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/contacts.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","searchFilter","handleChange","value","onChange","PersonForm","name","number","handleSubmit","handleNameChange","handleNumberChange","onSubmit","className","type","id","Persons","persons","handleDeleteButton","map","person","onClick","Notification","message","baseUrl","axios","get","then","response","data","newContact","post","delete","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","personToFilter","setPersonToFilter","notificationMessage","setNotificationMessage","notificationType","setNotificationType","useEffect","contactService","initialContacts","personsToShow","filter","toLowerCase","includes","personName","window","confirm","setTimeout","e","target","preventDefault","personToAdd","some","idToAdd","find","p","updatedContact","catch","error","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3814e038.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ searchFilter, handleChange }) => {\r\n    \r\n    return (\r\n        <div>\r\n            <h3>Filter contacts:</h3>\r\n            <label>Filter: </label>\r\n            <input value={searchFilter} onChange={handleChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;","const PersonForm = ({ name, number, handleSubmit, handleNameChange, handleNumberChange }) => {\r\n    return (\r\n        <div>\r\n            <h3>Add new contact:</h3>\r\n            <form onSubmit={handleSubmit} className=\"Form\">\r\n                <label>Name: </label>\r\n                <input onChange={handleNameChange} value={name}/>\r\n            \r\n                <label>Number: </label>\r\n                <input onChange={handleNumberChange} value={number}/>\r\n            \r\n                <button type=\"submit\" id=\"addButton\">Add</button>\r\n            </form>\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default PersonForm;","const Persons = ({ persons, handleDeleteButton }) => {\r\n    return(\r\n        <div>\r\n            <h3>Contacts:</h3>\r\n            <div >\r\n            {persons.map(person => \r\n                <div key={person.name} className=\"ContactInfo\">\r\n                    <p>\r\n                        {person.name} : {person.number} {' '}\r\n                    </p>\r\n                    \r\n                    <button onClick={() => handleDeleteButton(person.id)} id=\"deleteButton\">Delete</button>    \r\n                      \r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Persons;","import React from 'react';\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={type === 'Success' ? 'NotificationSuccess' : 'NotificationError'}>\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getContacts = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst createContact = newContact => {\r\n    const request = axios.post(baseUrl, newContact);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst deleteContact = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst updateContact = (id, newContact) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newContact);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nexport default { getContacts, createContact, deleteContact, updateContact };","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport contactService from './services/contacts';\nimport './index.css';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]); \n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ personToFilter, setPersonToFilter] = useState('');\n  const [ notificationMessage, setNotificationMessage ] = useState(null);\n  const [ notificationType, setNotificationType ] = useState('');\n\n  useEffect(() => {\n    contactService\n      .getContacts()\n      .then(initialContacts => {\n        setPersons(initialContacts);\n      })\n  }, [])\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    \n    const personToAdd = {\n      name: newName,\n      number: newNumber\n    }\n\n    if(persons.some(person => person.name === newName)){\n      if (window.confirm(`'${newName}' already exist. Replace his number with ${newNumber}?`)) {\n        const idToAdd = persons.find(p => p.name === newName).id;\n        contactService\n          .updateContact(idToAdd, personToAdd)\n          .then(updatedContact => {\n            setPersons(persons.map(person => person.id !== idToAdd ? person : updatedContact));\n            setNewName('');\n            setNewNumber('');\n            setNotificationMessage(`\"${newName}\" number is updated to ${newNumber}`);\n            setNotificationType('Success');\n          })\n          .catch(error => {\n            setNotificationMessage(error.response.data.error);\n            setNotificationType('Error');\n          })\n          /* .catch(() => {\n            setPersons(persons.filter(person => person.id !== idToAdd));\n            setNotificationMessage(`\"${newName}\" was already removed from server!`);\n            setNotificationType('Error');\n          }) */\n        \n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n\n      }\n    } else {\n        contactService\n          .createContact(personToAdd)\n          .then(newContact => {\n            setPersons(persons.concat(newContact));\n            setNewName('');\n            setNewNumber('');\n            setNotificationMessage(`\"${newName}\" has been added to contacts.`);\n            setNotificationType('Success');\n          })\n          .catch(error => {\n            setNotificationMessage(error.response.data.error);\n            setNotificationType('Error');\n          })\n            \n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n    }\n  }\n\n  const handleDeleteButton = id => {\n    const filteredPerson = persons.filter(person => person.id === id);\n    const personName = filteredPerson[0].name;\n\n    if(window.confirm(`Delete \"${personName}\"?`)){\n      contactService\n        .deleteContact(id);\n\n      setPersons(persons.filter(person => person.id !== id));\n      setNotificationMessage(`\"${personName}\" was deleted from contacts`);\n      setNotificationType('Success');\n\n      setTimeout(() => {\n        setNotificationMessage(null);\n      }, 5000);\n    }\n  }\n\n  const personsToShow = personToFilter === ''\n    ? persons\n    : persons.filter( person => \n        person.name.toLowerCase().includes(personToFilter.toLowerCase())\n    );\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  }\n\n  const handleFilterChange = (e) => {\n    setPersonToFilter(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"ContainerHalf\">\n        <h2>Phonebook</h2>\n        <div className=\"Contacts\">\n          <Persons \n            persons={personsToShow} \n            handleDeleteButton={handleDeleteButton} />\n          <Filter \n            searchFilter={personToFilter} \n            handleChange={handleFilterChange} />\n        </div>\n      </div>\n      <div className=\"ContainerHalf\">\n        <div className=\"ContactActions\">\n          <PersonForm \n            name={newName}\n            number={newNumber}\n            handleSubmit={handleSubmit}\n            handleNameChange={handleNameChange}\n            handleNumberChange={handleNumberChange}\n          />\n          <Notification message={notificationMessage} type={notificationType} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}